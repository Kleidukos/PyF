version: 2

jobs:
  nix:
    docker:
      - image: nixos/nix:latest
    working_directory: ~/PyF
    steps:
      - checkout
      - restore_cache:
          keys:
            - cci-nix-{{ checksum "nixpkgs.nix" }}-{{ checksum "default.nix" }}-{{ checksum "PyF.cabal" }}
            - cci-nix-{{ checksum "nixpkgs.nix" }}-{{ checksum "default.nix" }}
            - cci-nix-{{ checksum "nixpkgs.nix" }}
      - run:
          name: Prefetch
          command: nix-shell --command true
      - save_cache:
          name: Cache Dependencies
          key: cci-nix-{{ checksum "nixpkgs.nix" }}-{{ checksum "default.nix" }}-{{ checksum "PyF.cabal" }}
          paths:
            - "/nix/store"
      - run:
          name: Build
          command: nix-build

  stack:
    docker:
      - image: fpco/stack-build:lts
    working_directory: ~/PyF
    steps:
      - checkout
      - restore_cache:
          keys:
            - cci-demo-haskell-v1-{{ checksum "stack.yaml" }}-{{ checksum "PyF.cabal" }}
            - cci-demo-haskell-v1-{{ checksum "stack.yaml" }}
      - run:
          # see: https://github.com/commercialhaskell/stackage/issues/4783
          # `ghc-lib-parser` conflicts with `template-haskell` for module Language.Haskell.TH.Syntax
          # The test suite uses a bare GHC (with all the provided
          # packages). This is fine in nix, but does not work in the
          # stackage CI context where GHC comes with a world of
          # packages.
          # This is here to ensure that it will continue to work in stack CI.
          name: Trash the environment
          command: stack install ghc-lib-parser
      - run:
          name: Build dependencies
          command: stack test --only-dependencies
      - save_cache:
          name: Cache Dependencies
          key: cci-demo-haskell-v1-{{ checksum "stack.yaml" }}-{{ checksum "PyF.cabal" }}
          paths:
            - "/root/.stack"
            - ".stack-work"
      - run:
          name: Build
          command: stack test

workflows:
  version: 2
  nix_stack:
    jobs:
      - nix
      - stack
